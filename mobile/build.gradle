// Gradle plugins
plugins {
    id 'com.adarshr.test-logger' version '1.1.2'
}
apply plugin: 'com.android.application'
apply plugin: 'jacoco'

// Jacoco Configurations
jacoco {
    toolVersion = "$jacocoVersion"
}
tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

// Custom Jacoco test report script (including project build and testing)
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec", 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

// Core Android builds
android {

    // Android SDK Version information
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    // Default Android SDK settings
    defaultConfig {
        applicationId "splitsound.com.splitsound"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Native programming build
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14 -frtti -fexceptions"
            }
        }
        multiDexEnabled true
    }

    // Build configurations for debug and release
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Turn off animations for Unit testing
    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
        }

    }
    // Builds dummy cpp file
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    // Prevent build failures on lint errors
    lintOptions {
        abortOnError false
    }
}

// Imported dependencies
dependencies {
    implementation 'com.google.code.gson:gson:2.6.2'
    implementation 'com.google.android.gms:play-services-wearable:+'

    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:27.1.0'

    implementation files('libs/rtpLib.jar')

    testImplementation 'junit:junit:4.12'
    androidTestUtil 'com.android.support.test:orchestrator:1.0.2-alpha1'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    testImplementation 'org.robolectric:robolectric:3.8'

    wearApp project(':wear')

}
